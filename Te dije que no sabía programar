import { StockRegistry } from "./interfaces"
import { mockupStockPrices } from "./mockups";


 /**
  * (1 + Return) ^ (1 / N) - 1 = Annualized Return
  * To accurately calculate the annualized return, you will first 
  * have to determine the overall return of an investment. The formula 
  * for the overall return is (ending value - beginning value) / beginning value. 
  * In this formula, the beginning value is what your portfolio was worth 
  * when you invested, or how much you put into an investment. 
  * The ending value is how much your portfolio is worth at the end of 
  * the period that you are trying to calculate the annualized return for.
  */

class Stock {
  prices: StockRegistry[] = mockupStockPrices;
  getPriceByDate(date: Date): number {
    const targetStockByDate = this.prices.find(stock => stock.date === date)
    return targetStockByDate.price
  }
}

class Portfolio {
  portfolioStocks: StockRegistry[]

  constructor({
    stocks = []
  }: {
    stocks: StockRegistry[]
  }) {
    this.portfolioStocks = stocks.map(stock => (new Stock()))
  }
   getStockPrice(date: Date) => number;


   getProfit(dateFrom: Date, dateTo: Date): number {
      const overallReturn = getOverallReturn

   }
   
 }

 const getOverallReturn = (endingStockValue: number, beginningStockValue: number): number => {
   return (endingStockValue - beginningStockValue) / beginningStockValue
 }

 const portfolio = new Portfolio()
 console.log(portfolio)
